// Code generated by 'yaegi extract github.com/eolinker/eosc/eocontext'. DO NOT EDIT.

package script_handler

import (
	"context"
	"net"
	"reflect"
	"time"

	"github.com/eolinker/eosc/eocontext"
	"github.com/traefik/yaegi/stdlib"
)

func init() {
	stdlib.Symbols["github.com/eolinker/eosc/eocontext/eocontext"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DoChain":             reflect.ValueOf(eocontext.DoChain),
		"Down":                reflect.ValueOf(eocontext.Down),
		"ErrEoCtxUnCloneable": reflect.ValueOf(&eocontext.ErrEoCtxUnCloneable).Elem(),
		"FilterSkillName":     reflect.ValueOf(&eocontext.FilterSkillName).Elem(),
		"Leave":               reflect.ValueOf(eocontext.Leave),
		"NodeHost":            reflect.ValueOf(eocontext.NodeHost),
		"PassHost":            reflect.ValueOf(eocontext.PassHost),
		"ReWriteHost":         reflect.ValueOf(eocontext.ReWriteHost),
		"Running":             reflect.ValueOf(eocontext.Running),
		"ToFilter":            reflect.ValueOf(eocontext.ToFilter),

		// type definitions
		"Attrs":               reflect.ValueOf((*eocontext.Attrs)(nil)),
		"BalanceHandler":      reflect.ValueOf((*eocontext.BalanceHandler)(nil)),
		"CompleteHandler":     reflect.ValueOf((*eocontext.CompleteHandler)(nil)),
		"EoApp":               reflect.ValueOf((*eocontext.EoApp)(nil)),
		"EoContext":           reflect.ValueOf((*eocontext.EoContext)(nil)),
		"Filters":             reflect.ValueOf((*eocontext.Filters)(nil)),
		"FinishHandler":       reflect.ValueOf((*eocontext.FinishHandler)(nil)),
		"IAttributes":         reflect.ValueOf((*eocontext.IAttributes)(nil)),
		"IChain":              reflect.ValueOf((*eocontext.IChain)(nil)),
		"IChainPro":           reflect.ValueOf((*eocontext.IChainPro)(nil)),
		"IFilter":             reflect.ValueOf((*eocontext.IFilter)(nil)),
		"INode":               reflect.ValueOf((*eocontext.INode)(nil)),
		"NodeStatus":          reflect.ValueOf((*eocontext.NodeStatus)(nil)),
		"PassHostMod":         reflect.ValueOf((*eocontext.PassHostMod)(nil)),
		"UpstreamHostHandler": reflect.ValueOf((*eocontext.UpstreamHostHandler)(nil)),

		// interface wrapper definitions
		"_BalanceHandler":      reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_BalanceHandler)(nil)),
		"_CompleteHandler":     reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_CompleteHandler)(nil)),
		"_EoApp":               reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_EoApp)(nil)),
		"_EoContext":           reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_EoContext)(nil)),
		"_FinishHandler":       reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_FinishHandler)(nil)),
		"_IAttributes":         reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_IAttributes)(nil)),
		"_IChain":              reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_IChain)(nil)),
		"_IChainPro":           reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_IChainPro)(nil)),
		"_IFilter":             reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_IFilter)(nil)),
		"_INode":               reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_INode)(nil)),
		"_UpstreamHostHandler": reflect.ValueOf((*_github_com_eolinker_eosc_eocontext_UpstreamHostHandler)(nil)),
	}
}

// _github_com_eolinker_eosc_eocontext_BalanceHandler is an interface wrapper for BalanceHandler type
type _github_com_eolinker_eosc_eocontext_BalanceHandler struct {
	IValue   interface{}
	WNodes   func() []eocontext.INode
	WScheme  func() string
	WSelect  func(ctx eocontext.EoContext) (eocontext.INode, int, error)
	WTimeOut func() time.Duration
}

func (W _github_com_eolinker_eosc_eocontext_BalanceHandler) Nodes() []eocontext.INode {
	return W.WNodes()
}
func (W _github_com_eolinker_eosc_eocontext_BalanceHandler) Scheme() string {
	return W.WScheme()
}
func (W _github_com_eolinker_eosc_eocontext_BalanceHandler) Select(ctx eocontext.EoContext) (eocontext.INode, int, error) {
	return W.WSelect(ctx)
}
func (W _github_com_eolinker_eosc_eocontext_BalanceHandler) TimeOut() time.Duration {
	return W.WTimeOut()
}

// _github_com_eolinker_eosc_eocontext_CompleteHandler is an interface wrapper for CompleteHandler type
type _github_com_eolinker_eosc_eocontext_CompleteHandler struct {
	IValue    interface{}
	WComplete func(ctx eocontext.EoContext) error
}

func (W _github_com_eolinker_eosc_eocontext_CompleteHandler) Complete(ctx eocontext.EoContext) error {
	return W.WComplete(ctx)
}

// _github_com_eolinker_eosc_eocontext_EoApp is an interface wrapper for EoApp type
type _github_com_eolinker_eosc_eocontext_EoApp struct {
	IValue interface{}
	WNodes func() []eocontext.INode
}

func (W _github_com_eolinker_eosc_eocontext_EoApp) Nodes() []eocontext.INode {
	return W.WNodes()
}

// _github_com_eolinker_eosc_eocontext_EoContext is an interface wrapper for EoContext type
type _github_com_eolinker_eosc_eocontext_EoContext struct {
	IValue                  interface{}
	WAcceptTime             func() time.Time
	WAssert                 func(i interface{}) error
	WClone                  func() (eocontext.EoContext, error)
	WContext                func() context.Context
	WGetBalance             func() eocontext.BalanceHandler
	WGetComplete            func() eocontext.CompleteHandler
	WGetFinish              func() eocontext.FinishHandler
	WGetLabel               func(name string) string
	WGetUpstreamHostHandler func() eocontext.UpstreamHostHandler
	WIsCloneable            func() bool
	WLabels                 func() map[string]string
	WLocalAddr              func() net.Addr
	WLocalIP                func() net.IP
	WLocalPort              func() int
	WRealIP                 func() string
	WRequestId              func() string
	WScheme                 func() string
	WSetBalance             func(handler eocontext.BalanceHandler)
	WSetCompleteHandler     func(handler eocontext.CompleteHandler)
	WSetFinish              func(handler eocontext.FinishHandler)
	WSetLabel               func(name string, value string)
	WSetUpstreamHostHandler func(handler eocontext.UpstreamHostHandler)
	WValue                  func(key interface{}) interface{}
	WWithValue              func(key interface{}, val interface{})
}

func (W _github_com_eolinker_eosc_eocontext_EoContext) AcceptTime() time.Time {
	return W.WAcceptTime()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) Assert(i interface{}) error {
	return W.WAssert(i)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) Clone() (eocontext.EoContext, error) {
	return W.WClone()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) Context() context.Context {
	return W.WContext()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) GetBalance() eocontext.BalanceHandler {
	return W.WGetBalance()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) GetComplete() eocontext.CompleteHandler {
	return W.WGetComplete()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) GetFinish() eocontext.FinishHandler {
	return W.WGetFinish()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) GetLabel(name string) string {
	return W.WGetLabel(name)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) GetUpstreamHostHandler() eocontext.UpstreamHostHandler {
	return W.WGetUpstreamHostHandler()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) IsCloneable() bool {
	return W.WIsCloneable()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) Labels() map[string]string {
	return W.WLabels()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) LocalAddr() net.Addr {
	return W.WLocalAddr()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) LocalIP() net.IP {
	return W.WLocalIP()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) LocalPort() int {
	return W.WLocalPort()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) RealIP() string {
	return W.WRealIP()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) RequestId() string {
	return W.WRequestId()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) Scheme() string {
	return W.WScheme()
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) SetBalance(handler eocontext.BalanceHandler) {
	W.WSetBalance(handler)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) SetCompleteHandler(handler eocontext.CompleteHandler) {
	W.WSetCompleteHandler(handler)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) SetFinish(handler eocontext.FinishHandler) {
	W.WSetFinish(handler)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) SetLabel(name string, value string) {
	W.WSetLabel(name, value)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) SetUpstreamHostHandler(handler eocontext.UpstreamHostHandler) {
	W.WSetUpstreamHostHandler(handler)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) Value(key interface{}) interface{} {
	return W.WValue(key)
}
func (W _github_com_eolinker_eosc_eocontext_EoContext) WithValue(key interface{}, val interface{}) {
	W.WWithValue(key, val)
}

// _github_com_eolinker_eosc_eocontext_FinishHandler is an interface wrapper for FinishHandler type
type _github_com_eolinker_eosc_eocontext_FinishHandler struct {
	IValue  interface{}
	WFinish func(ctx eocontext.EoContext) error
}

func (W _github_com_eolinker_eosc_eocontext_FinishHandler) Finish(ctx eocontext.EoContext) error {
	return W.WFinish(ctx)
}

// _github_com_eolinker_eosc_eocontext_IAttributes is an interface wrapper for IAttributes type
type _github_com_eolinker_eosc_eocontext_IAttributes struct {
	IValue         interface{}
	WGetAttrByName func(name string) (string, bool)
	WGetAttrs      func() eocontext.Attrs
}

func (W _github_com_eolinker_eosc_eocontext_IAttributes) GetAttrByName(name string) (string, bool) {
	return W.WGetAttrByName(name)
}
func (W _github_com_eolinker_eosc_eocontext_IAttributes) GetAttrs() eocontext.Attrs {
	return W.WGetAttrs()
}

// _github_com_eolinker_eosc_eocontext_IChain is an interface wrapper for IChain type
type _github_com_eolinker_eosc_eocontext_IChain struct {
	IValue   interface{}
	WDestroy func()
	WDoChain func(ctx eocontext.EoContext) error
}

func (W _github_com_eolinker_eosc_eocontext_IChain) Destroy() {
	W.WDestroy()
}
func (W _github_com_eolinker_eosc_eocontext_IChain) DoChain(ctx eocontext.EoContext) error {
	return W.WDoChain(ctx)
}

// _github_com_eolinker_eosc_eocontext_IChainPro is an interface wrapper for IChainPro type
type _github_com_eolinker_eosc_eocontext_IChainPro struct {
	IValue   interface{}
	WChain   func(ctx eocontext.EoContext, append ...eocontext.IFilter) error
	WDestroy func()
}

func (W _github_com_eolinker_eosc_eocontext_IChainPro) Chain(ctx eocontext.EoContext, append ...eocontext.IFilter) error {
	return W.WChain(ctx, append...)
}
func (W _github_com_eolinker_eosc_eocontext_IChainPro) Destroy() {
	W.WDestroy()
}

// _github_com_eolinker_eosc_eocontext_IFilter is an interface wrapper for IFilter type
type _github_com_eolinker_eosc_eocontext_IFilter struct {
	IValue    interface{}
	WDestroy  func()
	WDoFilter func(ctx eocontext.EoContext, next eocontext.IChain) (err error)
}

func (W _github_com_eolinker_eosc_eocontext_IFilter) Destroy() {
	W.WDestroy()
}
func (W _github_com_eolinker_eosc_eocontext_IFilter) DoFilter(ctx eocontext.EoContext, next eocontext.IChain) (err error) {
	return W.WDoFilter(ctx, next)
}

// _github_com_eolinker_eosc_eocontext_INode is an interface wrapper for INode type
type _github_com_eolinker_eosc_eocontext_INode struct {
	IValue         interface{}
	WAddr          func() string
	WDown          func()
	WGetAttrByName func(name string) (string, bool)
	WGetAttrs      func() eocontext.Attrs
	WID            func() string
	WIP            func() string
	WLeave         func()
	WPort          func() int
	WStatus        func() eocontext.NodeStatus
	WUp            func()
}

func (W _github_com_eolinker_eosc_eocontext_INode) Addr() string {
	return W.WAddr()
}
func (W _github_com_eolinker_eosc_eocontext_INode) Down() {
	W.WDown()
}
func (W _github_com_eolinker_eosc_eocontext_INode) GetAttrByName(name string) (string, bool) {
	return W.WGetAttrByName(name)
}
func (W _github_com_eolinker_eosc_eocontext_INode) GetAttrs() eocontext.Attrs {
	return W.WGetAttrs()
}
func (W _github_com_eolinker_eosc_eocontext_INode) ID() string {
	return W.WID()
}
func (W _github_com_eolinker_eosc_eocontext_INode) IP() string {
	return W.WIP()
}
func (W _github_com_eolinker_eosc_eocontext_INode) Leave() {
	W.WLeave()
}
func (W _github_com_eolinker_eosc_eocontext_INode) Port() int {
	return W.WPort()
}
func (W _github_com_eolinker_eosc_eocontext_INode) Status() eocontext.NodeStatus {
	return W.WStatus()
}
func (W _github_com_eolinker_eosc_eocontext_INode) Up() {
	W.WUp()
}

// _github_com_eolinker_eosc_eocontext_UpstreamHostHandler is an interface wrapper for UpstreamHostHandler type
type _github_com_eolinker_eosc_eocontext_UpstreamHostHandler struct {
	IValue    interface{}
	WPassHost func() (eocontext.PassHostMod, string)
}

func (W _github_com_eolinker_eosc_eocontext_UpstreamHostHandler) PassHost() (eocontext.PassHostMod, string) {
	return W.WPassHost()
}
